name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: ^0.8
  SQLX_FEATURES: "rustls,postgres"
  APP_USER: app
  APP_USER_PWD: secret
  APP_DB_NAME: newsletter

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter  
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install sqlx-cli (if needed)
      run: |
        if ! command -v sqlx &> /dev/null; then
          cargo install sqlx-cli \
          --version=${{ env.SQLX_VERSION }} \
          --features ${{ env.SQLX_FEATURES }} \
          --no-default-features \
          --locked
        fi

    - name: Install PostgreSQL Client
      run: sudo apt-get install -y postgresql-client

    - name: Set Up Database
      run: |
        PGPASSWORD="password" psql -U postgres -h localhost -c "CREATE USER ${APP_USER} WITH PASSWORD '${APP_USER_PWD}';"
        PGPASSWORD="password" psql -U postgres -h localhost -c "ALTER USER ${APP_USER} CREATEDB;"

    - name: Run Migrations
      run: SKIP_DOCKER=true ./scripts/init_db.sh

    - name: Check Formatting
      run: cargo fmt -- --check

    - name: Run Clippy
      run: cargo clippy -- -D warnings

    - name: Run cargo-deny
      uses: EmbarkStudios/cargo-deny-action@v2

    - name: Build
      run: cargo build --verbose

    - name: Run Tests
      run: cargo test --verbose

    - name: Verify SQLx Queries
      run: cargo sqlx prepare --check
